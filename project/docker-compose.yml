# version: "3.8"

# services:
#   broker-service:
#     build:
#       context: /home/louis/Desktop/go-micro/broker-service
#       dockerfile: cmd/api/broker-service.dockerfile
#     restart: always
#     ports:
#       - "8084:8083"
#     # Removed deploy section as it's not supported in non-Swarm mode

#   authentication-service:
#     build:
#       context: ./../authentication-service
#       dockerfile: ./../authentication-service/authentication-service.dockerfile
#     restart: always
#     ports:
#       - "8081:80" # Fixed indentation
#     environment:
#       DSN: "host=postgres port=5434 user=postgres password=password dbname=user sslmode=disable timezone=UTC connect_timeout=5"
#     # Removed delay and deploy sections, as these aren't appropriate for standard docker-compose deployments

#   postgres:
#     image: "postgres:14.0"
#     ports:
#       - "5434:5432"
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: password
#       POSTGRES_DB: users
#     volumes:
#       - ./db-data/postgres:/var/lib/postgresql/data # Fixed volume mapping

version: "3.8"

services:
  broker-service:
    build:
      context: ../broker-service
      dockerfile: broker-service.dockerfile
    restart: always
    ports:
      - "8084:8083"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
      build:
        context: ../logger-service
        dockerfile: cmd/api/logger-service.dockerfile
      restart: always
      deploy:
        mode: replicated
        replicas: 1

  mailer-service:
    build:
      context: ../mail-service
      dockerfile: mailer-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_ADDRESS: "noreply@localhost"
      FROM_NAME: "Mailer Service"

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "9003:8084"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  listener-service:
    build:
      context: ../listener-service
      dockerfile: listener-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
  postgres:
    image: "postgres:14.0"
    ports:
      - "5435:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq-data:/var/lib/rabbitmq
  
      